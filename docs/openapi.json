{"openapi": "3.1.0", "info": {"title": "Sieve API", "version": "0.1.0"}, "paths": {"/v2/functions": {"get": {"summary": "List Functions", "description": "List all functions owned by the user.", "operationId": "list_functions", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "description": "The maximum amount of functions to show.", "default": 500, "title": "Limit"}, "description": "The maximum amount of functions to show."}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "description": "Exclude the first N functions.", "default": 0, "title": "Offset"}, "description": "Exclude the first N functions."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/FunctionApp"}, "title": "Response List Functions V2 Functions Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/functions/{owner_name}/{function_name}": {"get": {"summary": "Get Function", "description": "Get information about the given function.", "operationId": "get_function", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FunctionApp"}}}}, "404": {"description": "Function not found.", "content": {"application/json": {"example": {"detail": "Function not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/functions/{owner_name}/{function_name}/edit": {"post": {"summary": "Edit Function", "operationId": "edit_function", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EditFunctionRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FunctionApp"}}}}, "404": {"description": "Function not found.", "content": {"application/json": {"example": {"detail": "Function not found."}}}}, "403": {"description": "Forbidden.", "content": {"application/json": {"example": {"detail": "Forbidden."}}}}, "400": {"description": "Invalid values passed.", "content": {"application/json": {"example": {"detail": "Invalid values passed."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/functions/{owner_name}/{function_name}/versions": {"get": {"summary": "List Function Versions", "description": "Get all versions of the given function.", "operationId": "get_function_versions", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "description": "The maximum amount of versions to show.", "default": 500, "title": "Limit"}, "description": "The maximum amount of versions to show."}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "description": "Exclude the first N versions.", "default": 0, "title": "Offset"}, "description": "Exclude the first N versions."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Version"}, "title": "Response Get Function Versions V2 Functions  Owner Name   Function Name  Versions Get"}}}}, "404": {"description": "Function not found.", "content": {"application/json": {"example": {"detail": "Function not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/functions/{owner_name}/{function_name}/versions/{version_slug}": {"get": {"summary": "Get Function Version", "description": "Get information about a specific version of the given function.", "operationId": "get_function_version", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}, {"name": "version_slug", "in": "path", "required": true, "schema": {"type": "string", "description": "The ID or ID prefix of the function version, or 'latest'.", "examples": ["41b83e76-0a13-4d96-b0a0-7cd62c9977c3"], "title": "Version Slug"}, "description": "The ID or ID prefix of the function version, or 'latest'."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Version"}}}}, "404": {"description": "Function version not found.", "content": {"application/json": {"example": {"detail": "Function version not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/functions/{owner_name}/{function_name}/versions/{version_slug}/jobs": {"get": {"summary": "List Version Jobs", "description": "List all jobs for the given function version.", "operationId": "get_function_jobs_by_version_slug", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}, {"name": "version_slug", "in": "path", "required": true, "schema": {"type": "string", "description": "The ID or ID prefix of the function version, or 'latest'.", "examples": ["41b83e76-0a13-4d96-b0a0-7cd62c9977c3"], "title": "Version Slug"}, "description": "The ID or ID prefix of the function version, or 'latest'."}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "description": "The maximum amount of jobs to show.", "default": 500, "title": "Limit"}, "description": "The maximum amount of jobs to show."}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "description": "Exclude the first N jobs.", "default": 0, "title": "Offset"}, "description": "Exclude the first N jobs."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListResponse_Job_"}}}}, "404": {"description": "Function version not found.", "content": {"application/json": {"example": {"detail": "Function version not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/functions/{owner_name}/{function_name}/versions/{version_slug}/edit": {"post": {"summary": "Edit Function Version", "operationId": "edit_function_version", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}, {"name": "version_slug", "in": "path", "required": true, "schema": {"type": "string", "description": "The ID or ID prefix of the function version, or 'latest'.", "examples": ["41b83e76-0a13-4d96-b0a0-7cd62c9977c3"], "title": "Version Slug"}, "description": "The ID or ID prefix of the function version, or 'latest'."}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EditFunctionVersionRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Version"}}}}, "404": {"description": "Function version not found.", "content": {"application/json": {"example": {"detail": "Function version not found."}}}}, "403": {"description": "Forbidden.", "content": {"application/json": {"example": {"detail": "Forbidden."}}}}, "400": {"description": "Invalid values passed.", "content": {"application/json": {"example": {"detail": "Invalid values passed."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/functions/{owner_name}/{function_name}/jobs": {"get": {"summary": "List Function Jobs", "description": "List all jobs for the given function.", "operationId": "list_function_jobs", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "description": "The maximum amount of jobs to show.", "default": 500, "title": "Limit"}, "description": "The maximum amount of jobs to show."}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "description": "Exclude the first N jobs.", "default": 0, "title": "Offset"}, "description": "Exclude the first N jobs."}, {"name": "status", "in": "query", "required": false, "schema": {"type": "string", "description": "The status of the job. Possible values: 'queued', 'processing', 'error', 'finished', 'cancelled', . Leave empty to get all statuses.", "default": "", "title": "Status"}, "description": "The status of the job. Possible values: 'queued', 'processing', 'error', 'finished', 'cancelled', . Leave empty to get all statuses."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListResponse_Job_"}}}}, "404": {"description": "Function not found.", "content": {"application/json": {"example": {"detail": "Function not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/user/concurrency": {"get": {"summary": "Get Concurrency Info", "description": "Get max concurrency, unfinished jobs, jobs processing, jobs queued, jobs awaiting concurrency", "operationId": "get_concurrency_info", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConcurrencyResponse"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}, "security": [{"APIKeyHeader": []}]}}, "/v2/usage": {"get": {"summary": "Get Total Usage", "description": "Get total usage over time in seconds and dollars.", "operationId": "organization_usage", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "start_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the start of the current billing period.", "title": "Start Timestamp"}}, {"name": "end_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the end of the current billing period.", "title": "End Timestamp"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DetailedUsage"}}}}, "400": {"description": "Invalid timestamps provided.", "content": {"application/json": {"example": {"detail": "Invalid timestamps provided."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/usage/function/{owner_name}/{function_name}": {"get": {"summary": "Get Function Usage", "description": "Get function usage over time in seconds and dollars.", "operationId": "function_usage", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}, {"name": "start_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the start of the current billing period.", "title": "Start Timestamp"}}, {"name": "end_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the end of the current billing period.", "title": "End Timestamp"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DetailedUsage"}}}}, "400": {"description": "Invalid function specified.", "content": {"application/json": {"example": {"detail": "Invalid function specified."}}}}, "404": {"description": "Function not found.", "content": {"application/json": {"example": {"detail": "Function not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/usage/function/{owner_name}/{function_name}/versions/{version_slug}": {"get": {"summary": "Get Version Usage", "description": "Get function version usage over time in seconds and dollars.", "operationId": "function_version_usage", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "owner_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The owner of the function.", "examples": ["sieve"], "title": "Owner Name"}, "description": "The owner of the function."}, {"name": "function_name", "in": "path", "required": true, "schema": {"type": "string", "description": "The name of the function.", "examples": ["retalker"], "title": "Function Name"}, "description": "The name of the function."}, {"name": "version_slug", "in": "path", "required": true, "schema": {"type": "string", "description": "The ID or ID prefix of the function version, or 'latest'.", "examples": ["41b83e76-0a13-4d96-b0a0-7cd62c9977c3"], "title": "Version Slug"}, "description": "The ID or ID prefix of the function version, or 'latest'."}, {"name": "start_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the start of the current billing period.", "title": "Start Timestamp"}}, {"name": "end_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the end of the current billing period.", "title": "End Timestamp"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DetailedUsage"}}}}, "400": {"description": "Invalid timestamps provided.", "content": {"application/json": {"example": {"detail": "Invalid timestamps provided."}}}}, "404": {"description": "Function version not found.", "content": {"application/json": {"example": {"detail": "Function version not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/usage/function": {"get": {"summary": "Get Per Function Usage", "description": "Get usage per function over time in seconds and dollars.", "operationId": "usage_per_function", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "start_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the start of the current billing period.", "title": "Start Timestamp"}}, {"name": "end_timestamp", "in": "query", "required": true, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds. If not specified, defaults to the end of the current billing period.", "title": "End Timestamp"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "additionalProperties": {"$ref": "#/components/schemas/DetailedUsage"}, "title": "Response Usage Per Function V2 Usage Function Get"}}}}, "400": {"description": "Invalid timestamps provided.", "content": {"application/json": {"example": {"detail": "Invalid timestamps provided."}}}}, "404": {"description": "Not found.", "content": {"application/json": {"example": {"detail": "Not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/usage/job/{job_id}": {"get": {"summary": "Get Job Cost", "description": "Get the cost of a job. Learn more about Sieve pricing [here](https://www.sievedata.com/pricing).", "operationId": "get_job_cost", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "description": "The job ID to fetch the cost for.", "title": "Job Id"}, "description": "The job ID to fetch the cost for."}, {"name": "aggregated", "in": "query", "required": false, "schema": {"type": "boolean", "description": "If true, returns sum of all child job costs and the job itself.", "default": true, "title": "Aggregated"}, "description": "If true, returns sum of all child job costs and the job itself."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JobCostResponse"}}}}, "404": {"description": "Job not found.", "content": {"application/json": {"example": {"detail": "Job not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/usage/credits": {"get": {"summary": "Get Org Credits", "description": "This endpoint is used to fetch the number of credits remaining for the organization.\n\n:param request: The incoming HTTP request.\n:type request: fastapi.Request\n:return: A dictionary containing the number of credits remaining for the organization.", "operationId": "get_org_credits", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}, "security": [{"APIKeyHeader": []}]}}, "/v2/usage/concurrency": {"get": {"summary": "Get Concurrency Stats", "description": "Get historical concurrency statistics.", "operationId": "get_concurrency_stats", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "function", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string", "description": "Function in owner_name/function_name format. If not provided, returns concurrency for all functions."}, {"type": "null"}], "title": "Function"}}, {"name": "start", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Start date in ISO-8601 format (YYYY-MM-DDTHH:MM), UTC. Defaults to the previous day at 00:00. Must be within one week of end date.", "title": "Start"}, "description": "Start date in ISO-8601 format (YYYY-MM-DDTHH:MM), UTC. Defaults to the previous day at 00:00. Must be within one week of end date."}, {"name": "end", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "End date in ISO-8601 format (YYYY-MM-DDTHH:MM), UTC. Defaults to the previous day at 23:59. Must be within one week of start date.", "title": "End"}, "description": "End date in ISO-8601 format (YYYY-MM-DDTHH:MM), UTC. Defaults to the previous day at 23:59. Must be within one week of start date."}, {"name": "chunk_size", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 30, "description": "Chunk size in minutes", "default": 60, "title": "Chunk Size"}, "description": "Chunk size in minutes"}, {"name": "status", "in": "query", "required": false, "schema": {"enum": ["", "finished", "cancelled", "error"], "type": "string", "description": "Status of the job", "default": "finished", "title": "Status"}, "description": "Status of the job"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Chunk"}, "title": "Response Get Concurrency Stats V2 Usage Concurrency Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/jobs/{job_id}": {"delete": {"summary": "Cancel Job", "description": "Cancels a running job.", "operationId": "cancel_job", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "description": "The ID of the job.", "examples": ["43d7add5-61cf-44ad-aac8-c5d14c642bb4"], "title": "Job Id"}, "description": "The ID of the job."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/StatusResponse"}}}}, "404": {"description": "Job not found.", "content": {"application/json": {"example": {"detail": "Job not found."}}}}, "400": {"description": "Job is not processing.", "content": {"application/json": {"example": {"detail": "Job is not processing."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}, "get": {"summary": "Get Job", "description": "Get information about a specific job by id.", "operationId": "get_job", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "description": "The ID of the job.", "examples": ["43d7add5-61cf-44ad-aac8-c5d14c642bb4"], "title": "Job Id"}, "description": "The ID of the job."}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "description": "Exclude the first N outputs.", "default": 0, "title": "Offset"}, "description": "Exclude the first N outputs."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Job"}}}}, "400": {"description": "Invalid values passed.", "content": {"application/json": {"example": {"detail": "Invalid values passed."}}}}, "404": {"description": "Job not found.", "content": {"application/json": {"example": {"detail": "Job not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/jobs": {"get": {"summary": "List Jobs", "description": "List all jobs in your organization.", "operationId": "v2_list_jobs", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "description": "The maximum amount of jobs to show.", "default": 500, "title": "Limit"}, "description": "The maximum amount of jobs to show."}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "description": "Exclude the first N jobs.", "default": 0, "title": "Offset"}, "description": "Exclude the first N jobs."}, {"name": "status", "in": "query", "required": false, "schema": {"type": "string", "description": "The status of the job. Possible values: 'queued', 'processing', 'error', 'finished', 'cancelled', . Leave empty to get all statuses.", "default": "", "title": "Status"}, "description": "The status of the job. Possible values: 'queued', 'processing', 'error', 'finished', 'cancelled', . Leave empty to get all statuses."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListResponse_Job_"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/jobs/{job_id}/await": {"get": {"summary": "Await Job", "description": "Await job completion up to 10 minutes then return information.", "operationId": "get_job_await", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "description": "The ID of the job.", "examples": ["43d7add5-61cf-44ad-aac8-c5d14c642bb4"], "title": "Job Id"}, "description": "The ID of the job."}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "description": "Exclude the first N outputs.", "default": 0, "title": "Offset"}, "description": "Exclude the first N outputs."}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Job"}}}}, "400": {"description": "Invalid values passed.", "content": {"application/json": {"example": {"detail": "Invalid values passed."}}}}, "404": {"description": "Job not found.", "content": {"application/json": {"example": {"detail": "Job not found."}}}}, "408": {"description": "Request timeout.", "content": {"application/json": {"example": {"detail": "Request timeout."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/logs": {"get": {"summary": "Get Job Logs", "description": "Get the logs of a job by id.", "operationId": "get_logs", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "job_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The ID of the job.", "examples": ["43d7add5-61cf-44ad-aac8-c5d14c642bb4"], "title": "Job Id"}, "description": "The ID of the job."}, {"name": "start_time", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds.", "title": "Start Time"}}, {"name": "end_time", "in": "query", "required": false, "schema": {"anyOf": [{"type": "number"}, {"type": "integer"}, {"type": "null"}], "description": "The POSIX timestamp in float seconds or int nanoseconds.", "title": "End Time"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LogsResponse"}}}}, "400": {"description": "Invalid timestamps provided.", "content": {"application/json": {"example": {"detail": "Invalid timestamps provided."}}}}, "404": {"description": "Logs not found.", "content": {"application/json": {"example": {"detail": "Logs not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/push": {"post": {"summary": "Push New Job", "description": "Creates a new job.", "operationId": "push_new_job", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "source", "in": "query", "required": false, "schema": {"enum": ["api", "dashboard", "search"], "type": "string", "default": "api", "title": "Source"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PushRequest"}}}}, "callbacks": {"job_complete_depr": {"/": {}}, "job_start": {"/": {"post": {"summary": "Job Start", "operationId": "job_start__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhookResult_JobResponse_"}}}}}}}}, "job_complete": {"/": {"post": {"summary": "Job Complete", "operationId": "job_complete__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhookResult_JobResponse_"}}}}}}}}, "job_complete_no_output": {"/": {"post": {"summary": "Job Complete No Output", "operationId": "job_complete_no_output__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhookResult_JobWithoutOutputResponse_"}}}}}}}}, "new_output": {"/": {"post": {"summary": "New Output", "operationId": "new_output__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WebhookResult_NewOutputResponse_"}}}}}}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PushResponse"}}}}, "400": {"description": "Invalid function specified.", "content": {"application/json": {"example": {"detail": "Invalid function specified."}}}}, "402": {"description": "The Sieve account has ran out of credits and not provided a payment method.", "content": {"application/json": {"example": {"detail": "No remaining credits and no payment method entered. Please visit https://www.sievedata.com/dashboard/settings/billing."}}}}, "404": {"description": "Function not found.", "content": {"application/json": {"example": {"detail": "Function not found."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}, "/v2/services/compute": {"get": {"summary": "Get Compute Availability", "description": "Returns the availability of compute resources on Sieve.", "operationId": "get_compute_availability", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "401": {"description": "Unauthorized - valid API Key required.", "content": {"application/json": {"example": {"detail": "Unauthorized - valid API Key required."}}}}}}}}, "components": {"schemas": {"Chunk": {"properties": {"chunk_start": {"type": "string", "title": "Chunk Start", "description": "Start time of the chunk"}, "chunk_end": {"type": "string", "title": "Chunk End", "description": "End time of the chunk"}, "num_jobs": {"type": "integer", "title": "Num Jobs", "description": "Number of jobs in the chunk"}, "median_processing_time_seconds": {"type": "number", "title": "Median Processing Time Seconds", "description": "Median processing time in seconds"}, "average_concurrency": {"type": "number", "title": "Average Concurrency", "description": "Estimated concurrency based on number of jobs submitted and median processing time."}}, "type": "object", "required": ["chunk_start", "chunk_end", "num_jobs", "median_processing_time_seconds", "average_concurrency"], "title": "Chunk"}, "CompactFunctionApp": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the function."}, "owner_name": {"type": "string", "title": "Owner Name", "description": "The owner name of the function"}}, "type": "object", "required": ["name", "owner_name"], "title": "CompactFunctionApp"}, "ConcurrencyResponse": {"properties": {"max_concurrency": {"type": "integer", "title": "Max Concurrency", "description": "Maximum concurrency allowed for the organization"}, "num_current": {"type": "integer", "title": "Num Current", "description": "Number of unfinished jobs (processing + queued)"}, "num_processing": {"type": "integer", "title": "Num Processing", "description": "Number of jobs currently processing"}, "num_queued": {"type": "integer", "title": "Num Queued", "description": "Number of jobs currently queued but not awaiting concurrency slots"}, "num_limited": {"type": "integer", "title": "Num Limited", "description": "Number of jobs awaiting concurrency slots"}}, "type": "object", "required": ["max_concurrency", "num_current", "num_processing", "num_queued", "num_limited"], "title": "ConcurrencyResponse"}, "DetailedUsage": {"properties": {"total_compute_seconds": {"type": "number", "title": "Total Compute Seconds", "description": "Total amount of compute seconds accrued."}, "total_cost_dollars": {"type": "number", "title": "Total Cost Dollars", "description": "Total amount of dollars spent."}, "cpu": {"anyOf": [{"$ref": "#/components/schemas/MachineTypeUsage"}, {"type": "null"}], "description": "Usage for CPU machines."}, "a100": {"anyOf": [{"$ref": "#/components/schemas/MachineTypeUsage"}, {"type": "null"}], "description": "Usage for A100 machines."}, "a100-20gb": {"anyOf": [{"$ref": "#/components/schemas/MachineTypeUsage"}, {"type": "null"}], "description": "Usage for A100 20GB machines."}, "v100": {"anyOf": [{"$ref": "#/components/schemas/MachineTypeUsage"}, {"type": "null"}], "description": "Usage for V100 machines."}, "l4": {"anyOf": [{"$ref": "#/components/schemas/MachineTypeUsage"}, {"type": "null"}], "description": "Usage for L4 machines."}, "t4": {"anyOf": [{"$ref": "#/components/schemas/MachineTypeUsage"}, {"type": "null"}], "description": "Usage for T4 machines."}, "other": {"anyOf": [{"$ref": "#/components/schemas/MachineTypeUsage"}, {"type": "null"}], "description": "Usage for functions billed with custom pricing."}}, "type": "object", "required": ["total_compute_seconds", "total_cost_dollars"], "title": "DetailedUsage", "description": "Output schema for detailed usage including machine types."}, "EditFunctionRequest": {"properties": {"webhooks": {"anyOf": [{"$ref": "#/components/schemas/WebhooksModel"}, {"type": "null"}], "description": "Webhooks to subscribe to for the function."}, "visibility": {"anyOf": [{"type": "string", "enum": ["public", "private"]}, {"type": "null"}], "title": "Visibility", "description": "Whether the function is public or private."}, "title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title", "description": "Title of function."}, "code_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Code Url", "description": "URL of the function's code."}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "Description of the function."}, "tags": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Tags", "description": "Tags associated with the function."}, "cover_image_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Cover Image Url", "description": "URL pointing to an icon for the function."}, "readme": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Readme", "description": "README content for the function."}, "examples": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Examples", "description": "Example job ids."}}, "type": "object", "title": "EditFunctionRequest"}, "EditFunctionVersionRequest": {"properties": {"minimum_replicas": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Minimum Replicas", "description": "Minimum number of running replicas."}, "maximum_replicas": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Maximum Replicas", "description": "Maximum number of running replicas."}}, "type": "object", "title": "EditFunctionVersionRequest", "description": "Schema for editing a function version."}, "EnvironmentVariable": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the environment variables"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "The description of the environment variables"}, "default": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Default", "description": "Default value of the environment variable"}}, "type": "object", "required": ["name", "description", "default"], "title": "EnvironmentVariable"}, "FunctionApp": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the function."}, "owner_name": {"type": "string", "title": "Owner Name", "description": "The owner name of the function"}, "visibility": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Visibility", "description": "The visibility of the function. Omitted if truncate enabled."}, "title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title", "description": "The title of the function. Omitted if truncate enabled."}, "code_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Code Url", "description": "The link to the code of the function. Omitted if truncate enabled."}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "The description of the function. Omitted if truncate enabled."}, "tags": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Tags", "description": "The tags of the function. Omitted if truncate enabled."}, "cover_image_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Cover Image Url", "description": "The url of the function's cover image. Omitted if truncate enabled."}, "examples": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Examples", "description": "An array of job ids that the function playground will use as an example. Omitted if truncate enabled."}, "readme": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Readme", "description": "The readme of the function. Omitted if truncate enabled."}, "latest_version": {"anyOf": [{"$ref": "#/components/schemas/Version"}, {"type": "null"}], "description": "The latest version of the function. Omitted if truncate enabled."}, "function_type": {"anyOf": [{"type": "string", "enum": ["function", "workflow"]}, {"type": "null"}], "title": "Function Type", "description": "The type of the function, either a simple function or a workflow. Omitted if truncate enabled."}, "webhooks": {"anyOf": [{"items": {"$ref": "#/components/schemas/WebhookModel"}, "type": "array"}, {"type": "null"}], "title": "Webhooks", "description": "The webhooks associated with the function. Omitted if truncate enabled."}, "restart_on_error": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Restart On Error", "description": "Whether to restart the function on job error. Omitted if truncate enabled."}}, "type": "object", "required": ["name", "owner_name"], "title": "FunctionApp"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "InputOutput": {"properties": {"type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Type", "description": "The type of the output, see all possible values [here](https://docs.sievedata.com/guide/custom-apps/typing-and-metadata)"}, "name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name", "description": "The name of the output"}, "data": {"title": "Data", "description": "The data of the output. Empty if the response is not from a job"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description", "description": "The description of the output"}, "schema": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Schema"}, "run_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Run Id", "description": "The run id associated with this output"}, "is_optional": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Optional", "description": "Whether this input is optional or required", "default": false}}, "type": "object", "title": "InputOutput"}, "Job": {"properties": {"id": {"type": "string", "title": "Id", "description": "The id of the job."}, "function_id": {"type": "string", "title": "Function Id", "description": "The id of the function that the job belongs to. This can be the first 7 characters of the full id."}, "organization_id": {"type": "string", "title": "Organization Id", "description": "The ID of the organization that submitted the function."}, "function": {"anyOf": [{"$ref": "#/components/schemas/CompactFunctionApp"}, {"type": "null"}], "description": "The name of the function that the job belongs to."}, "status": {"type": "string", "title": "Status", "description": "The status of the job. Possible values: 'queued', 'processing', 'error', 'finished', 'cancelled'"}, "created_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Created At", "description": "The UTC time the job was created.", "examples": ["2024-12-15T01:41:59.195000"]}, "started_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Started At", "description": "The UTC time the job started processing by the function.", "examples": ["2024-12-15T01:41:59.195000"]}, "completed_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Completed At", "description": "The UTC time the job was completed.", "examples": ["2024-12-15T01:41:59.195000"]}, "inputs": {"type": "object", "title": "Inputs", "description": "Show child attributes", "default": {}}, "outputs": {"items": {"anyOf": [{"$ref": "#/components/schemas/InputOutput"}, {"items": {"$ref": "#/components/schemas/InputOutput"}, "type": "array"}]}, "type": "array", "title": "Outputs", "description": "Show child attributes", "default": []}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error that the job ran into. Empty string if there's no error."}, "visibility": {"type": "string", "title": "Visibility", "description": "\"public\" or \"private\"."}, "run_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Run Id", "description": "The run_id of the job."}, "children": {"anyOf": [{"additionalProperties": {"items": {}, "type": "array"}, "type": "object"}, {"type": "null"}], "title": "Children", "description": "Child attributes"}, "restarts": {"anyOf": [{"items": {"$ref": "#/components/schemas/Restart"}, "type": "array"}, {"type": "null"}], "title": "Restarts", "description": "Job restart metadata", "default": []}}, "type": "object", "required": ["id", "function_id", "organization_id", "function", "status", "created_at", "started_at", "completed_at", "error", "visibility", "run_id"], "title": "Job"}, "JobCostResponse": {"properties": {"job_id": {"type": "string", "title": "Job Id", "description": "ID of the job"}, "function_name": {"type": "string", "title": "Function Name", "description": "Name of the function"}, "function_owner_name": {"type": "string", "title": "Function Owner Name", "description": "Organization name of the function owner"}, "function_id": {"type": "string", "title": "Function Id", "description": "ID of the function"}, "cost": {"type": "number", "title": "Cost", "description": "Cost of the job, either aggregated or not"}}, "type": "object", "required": ["job_id", "function_name", "function_owner_name", "function_id", "cost"], "title": "JobCostResponse"}, "JobResponse": {"properties": {"job_id": {"type": "string", "title": "Job Id", "description": "The ID of the job."}, "status": {"type": "string", "title": "Status", "description": "The status of the job."}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message, if any."}, "outputs": {"items": {"$ref": "#/components/schemas/InputOutput"}, "type": "array", "title": "Outputs", "description": "The outputs of the job."}}, "type": "object", "required": ["job_id", "status", "error", "outputs"], "title": "JobResponse"}, "JobWithoutOutputResponse": {"properties": {"job_id": {"type": "string", "title": "Job Id", "description": "The ID of the job."}, "status": {"type": "string", "title": "Status", "description": "The status of the job."}, "error": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error", "description": "The error message, if any."}}, "type": "object", "required": ["job_id", "status", "error"], "title": "JobWithoutOutputResponse"}, "ListResponse_Job_": {"properties": {"data": {"items": {"$ref": "#/components/schemas/Job"}, "type": "array", "title": "Data"}, "next_offset": {"type": "integer", "title": "Next Offset", "default": -1}}, "type": "object", "required": ["data"], "title": "ListResponse[Job]"}, "Log": {"properties": {"message": {"type": "string", "title": "Message", "description": "The log message"}, "timestamp": {"type": "string", "title": "Timestamp", "description": "The timestamp of the log"}}, "type": "object", "required": ["message", "timestamp"], "title": "Log"}, "LogsData": {"properties": {"logs": {"items": {"$ref": "#/components/schemas/Log"}, "type": "array", "title": "Logs", "description": "A list of log entries"}, "labels": {"allOf": [{"$ref": "#/components/schemas/LogsLabel"}], "description": "Labels associated with this group of logs"}}, "type": "object", "required": ["logs", "labels"], "title": "LogsData"}, "LogsLabel": {"properties": {"run_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Run Id", "description": "The run ID"}, "job_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Job Id", "description": "The job ID"}, "organization_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Organization Id", "description": "The organization ID"}, "function_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Function Id", "description": "The function ID"}, "stage": {"type": "string", "title": "Stage", "description": "The stage of the process. Can be 'run', 'setup', or 'import'."}}, "type": "object", "required": ["stage"], "title": "LogsLabel"}, "LogsResponse": {"properties": {"data": {"items": {"$ref": "#/components/schemas/LogsData"}, "type": "array", "title": "Data"}, "next_start_time": {"type": "integer", "title": "Next Start Time"}, "last_time_returned": {"type": "string", "title": "Last Time Returned"}}, "type": "object", "required": ["data", "next_start_time", "last_time_returned"], "title": "LogsResponse"}, "MachineTypeUsage": {"properties": {"compute_seconds": {"type": "number", "title": "Compute Seconds", "description": "Amount of compute seconds accrued."}, "cost_dollars": {"type": "number", "title": "Cost Dollars", "description": "Amount of dollars spent."}}, "type": "object", "required": ["compute_seconds", "cost_dollars"], "title": "MachineTypeUsage", "description": "Output schema for per machine type usage"}, "NewOutputResponse": {"properties": {"job_id": {"type": "string", "title": "Job Id", "description": "The ID of the job."}, "output": {"type": "string", "title": "Output", "description": "The output that the job has produced."}}, "type": "object", "required": ["job_id", "output"], "title": "NewOutputResponse"}, "PushRequest": {"properties": {"function": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Function", "description": "The name of the function, in the format of `author/name[:version]`. Either `function` or `id` may be specified, but not both.", "examples": ["sieve/retalker"]}, "id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Id", "description": "The ID of the function to be called.", "examples": ["43d7add5-61cf-44ad-aac8-c5d14c642bb4"]}, "inputs": {"anyOf": [{"type": "object"}, {"items": {}, "type": "array"}], "title": "Inputs", "description": "The inputs to the job \u2014 read more about inputs [here](https://docs.sievedata.com/guide/sieve/inputs-and-outputs).", "examples": [{"input1": "a", "input2": "b"}]}, "webhooks": {"anyOf": [{"items": {"$ref": "#/components/schemas/WebhookModel"}, "type": "array"}, {"type": "null"}], "title": "Webhooks", "description": "Webhooks \u2014 see more info [here](https://docs.sievedata.com/guide/custom-apps/using-webhooks)."}, "env": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Env", "description": "Environment variables for the given job.", "examples": [{"OPENAI_API_KEY": "..."}]}}, "additionalProperties": true, "type": "object", "required": ["inputs"], "title": "PushRequest", "description": "Input schema for /v2/push."}, "PushResponse": {"properties": {"id": {"type": "string", "title": "Id", "description": "The ID of the job."}, "run_id": {"type": "string", "title": "Run Id", "description": "Internal metadata."}, "stream_output": {"type": "boolean", "title": "Stream Output", "description": "Whether the output will be streamed."}, "status": {"type": "string", "title": "Status", "description": "The status of the job. Possible values: 'queued', 'processing', 'error', 'finished', 'cancelled', . Leave empty to get all statuses."}, "organization_id": {"type": "string", "title": "Organization Id", "description": "The ID of the organization."}, "model_id": {"type": "string", "title": "Model Id", "description": "The ID of the model."}, "workflow_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Workflow Id", "description": "The ID of the workflow."}}, "type": "object", "required": ["id", "run_id", "stream_output", "status", "organization_id", "model_id", "workflow_id"], "title": "PushResponse", "description": "Output schema for /v2/push."}, "Restart": {"properties": {"timestamp": {"type": "string", "format": "date-time", "title": "Timestamp", "description": "The UTC time the job restarted.", "examples": ["2024-12-15T01:41:59.195000"]}, "reason": {"type": "string", "title": "Reason", "description": "The reason the job restarted"}, "type": {"type": "string", "enum": ["preemption", "OOM", "error"], "title": "Type", "description": "The type of restart"}, "run_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Run Id", "description": "The run id that restarted"}}, "type": "object", "required": ["timestamp", "reason", "type", "run_id"], "title": "Restart"}, "StatusResponse": {"properties": {"message": {"type": "string", "title": "Message", "description": "Description of the event"}}, "type": "object", "required": ["message"], "title": "StatusResponse"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "Version": {"properties": {"id": {"type": "string", "title": "Id", "description": "Id of the model"}, "build_status": {"type": "string", "title": "Build Status", "description": "Build status of the function version. Statuses are 'queued', 'building', 'pushing', 'deploying', 'ready', 'error'"}, "queued_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Queued At", "description": "The UTC time that the function build is queued.", "examples": ["2024-12-15T01:41:59.195000"]}, "built_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Built At", "description": "The UTC time that the function build finished building.", "examples": ["2024-12-15T01:41:59.195000"]}, "ready_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Ready At", "description": "The UTC time that the model is ready to process jobs.", "examples": ["2024-12-15T01:41:59.195000"]}, "compute_type": {"type": "string", "title": "Compute Type", "description": "Machine type to use. See possible values for GPU machine types"}, "python_packages": {"items": {"type": "string"}, "type": "array", "title": "Python Packages", "description": "An array of the model's python pip packages"}, "system_packages": {"items": {"type": "string"}, "type": "array", "title": "System Packages", "description": "An array of the model's system packages"}, "cuda_version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Cuda Version", "description": "Cuda Version"}, "gpu": {"type": "boolean", "title": "Gpu", "description": "Whether this model uses gpu"}, "split": {"type": "integer", "title": "Split", "description": "How many functions to allocate per node"}, "minimum_replicas": {"type": "integer", "title": "Minimum Replicas", "description": "The minimum number of replicas of the model. Scale your model's minimum replicas to avoid cold starts", "default": 0}, "maximum_replicas": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Maximum Replicas", "description": "The maximum number of replicas of the model. Prevents model replicas from scaling beyond a certain point", "default": 0}, "inputs": {"items": {"$ref": "#/components/schemas/InputOutput"}, "type": "array", "title": "Inputs", "description": "The inputs to a function"}, "outputs": {"items": {"$ref": "#/components/schemas/InputOutput"}, "type": "array", "title": "Outputs", "description": "The outputs to a function"}, "current_workers": {"anyOf": [{"$ref": "#/components/schemas/WorkerCounts"}, {"type": "null"}], "description": "The current number and status of the model's workers"}, "environment_variables": {"anyOf": [{"items": {"$ref": "#/components/schemas/EnvironmentVariable"}, "type": "array"}, {}], "title": "Environment Variables", "description": "The outputs to a function"}, "stream_output": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Stream Output", "description": "Stream output", "default": false}, "function_dependencies": {"items": {"type": "string"}, "type": "array", "title": "Function Dependencies", "description": "Function dependencies"}}, "type": "object", "required": ["id", "build_status", "queued_at", "built_at", "ready_at", "compute_type", "python_packages", "system_packages", "gpu", "split", "inputs", "outputs", "environment_variables", "function_dependencies"], "title": "Version"}, "WebhookModel": {"properties": {"type": {"type": "string", "enum": ["job.start", "job.complete", "job.complete.no_output", "job.new_output", "job_start", "job_complete"], "title": "Type"}, "url": {"type": "string", "title": "Url"}}, "type": "object", "required": ["type", "url"], "title": "WebhookModel"}, "WebhookResult_JobResponse_": {"properties": {"body": {"allOf": [{"$ref": "#/components/schemas/JobResponse"}], "description": "The body of the webhook response."}, "type": {"type": "string", "enum": ["job.start", "job.complete", "job.complete.no_output", "job.new_output", "job_start", "job_complete"], "title": "Type", "description": "The event type that triggered the webhook."}}, "type": "object", "required": ["body", "type"], "title": "WebhookResult[JobResponse]"}, "WebhookResult_JobWithoutOutputResponse_": {"properties": {"body": {"allOf": [{"$ref": "#/components/schemas/JobWithoutOutputResponse"}], "description": "The body of the webhook response."}, "type": {"type": "string", "enum": ["job.start", "job.complete", "job.complete.no_output", "job.new_output", "job_start", "job_complete"], "title": "Type", "description": "The event type that triggered the webhook."}}, "type": "object", "required": ["body", "type"], "title": "WebhookResult[JobWithoutOutputResponse]"}, "WebhookResult_NewOutputResponse_": {"properties": {"body": {"allOf": [{"$ref": "#/components/schemas/NewOutputResponse"}], "description": "The body of the webhook response."}, "type": {"type": "string", "enum": ["job.start", "job.complete", "job.complete.no_output", "job.new_output", "job_start", "job_complete"], "title": "Type", "description": "The event type that triggered the webhook."}}, "type": "object", "required": ["body", "type"], "title": "WebhookResult[NewOutputResponse]"}, "WebhooksModel": {"properties": {"hooks": {"items": {"$ref": "#/components/schemas/WebhookModel"}, "type": "array", "title": "Hooks"}}, "type": "object", "required": ["hooks"], "title": "WebhooksModel"}, "WorkerCounts": {"properties": {"starting": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Starting", "description": "The number of workers that are in the process of being started. This means that the worker has been allocated resources on the Sieve cloud, but is still in the process of creating the environment in which the model runs."}, "setup": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Setup", "description": "The number of workers that are in the process of running the setup function."}, "active": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Active", "description": "The number of workers that are actively running a prediction."}, "idle": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Idle", "description": "The number of workers that have fully setup, but are not currently running a prediction."}, "awaiting_resources": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Awaiting Resources", "description": "The number of workers that are still waiting for resources on the Sieve cloud."}}, "type": "object", "required": ["starting", "setup", "active", "idle", "awaiting_resources"], "title": "WorkerCounts", "description": "The current number and status of the model's workers."}}, "securitySchemes": {"APIKeyHeader": {"type": "apiKey", "description": "The Sieve API key to authenticate with.", "in": "header", "name": "X-API-Key"}}}}
